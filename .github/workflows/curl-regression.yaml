# Git clone based workflow regression where the command executed is ./initialize.sh
# .github/workflows/curl-regression.yaml
name: Curl Regression

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # https://crontab.cronhub.io/

jobs:
  macos_build:
    name: Build test
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    outputs:
      script_start_time: ${{ steps.run-script.outputs.start_time }}
      script_end_time: ${{ steps.run-script.outputs.end_time }}
    strategy:
      fail-fast: false
      matrix:
        node_version:
          - 16
        system:
          - os: macos-10.15
            target: x86_64-apple-darwin
        include:
          - system:
              os: [self-hosted, macOS, ARM64]
              target: aarch64-apple-darwin
            node_version: 16

    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v2
        env:
          REPO: ${{github.workspace}}
          DOTFILES_REF: ${{github.sha}}
          SKIP_SLOW_DEPENDENCIES: "1"
          HOMEBREW_BUNDLE_BREW_SKIP: "node"

      - name: Set env
        id: set-env
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Display the architecture
        shell: bash
        run: |
          arch

      - name: Check the CI environment variable
        shell: bash
        run: |
          [[ -z "${CI}" ]] && echo "Not running on CI" || echo "Running on CI"

      - name: Remove preinstalled brew packages
        run: |
          brew remove --force --ignore-dependencies $(brew list --formula)

      - name: Cache brew deps
        uses: actions/cache@v2
        with:
          # Paths to cache:
          # /usr/local/Homebrew - installation folder of Homebrew
          # /usr/local/Cellar - installation folder of Homebrew formulae
          # /usr/local/Frameworks, /usr/local/bin, /usr/local/opt - contain (links to) binaries installed by Homebrew formulae
          # /usr/local/lib/python3.8 - Python3 packages installation
          path: |
            /usr/local/Homebrew
            /usr/local/Cellar
            /usr/local/Frameworks
            /usr/local/bin
            /usr/local/opt
            /usr/local/lib/python3.8
            /opt/homebrew/
          key: macos-build-cache-${{ hashFiles('./setup.sh') }}

      - name: Run the script
        id: run-script
        env:
          RUN_SETUP: true
        run: |
          echo "::set-output name=start_time::$(date -u +%s)"
          bash -c "`curl -L https://git.io/dotfiles-m1`"
          echo "::set-output name=end_time::$(date -u +%s)"

  elapsed-badge:
    name: Create elapsed Badge
    runs-on: ubuntu-latest
    needs: macos_build
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v2

      - id: elapsed
        run: |
          ELAPSE=$(( ${{needs.macos_build.outputs.end_time}} - ${{needs.macos_build.outputs.start_time}} ))
          echo "##[set-output name=data;]$(($ELAPSE/60))m $(($ELAPSE%60))s"

      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@master
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: elapsed-curl-badge.json
          label: 'runtime curl'
          message: ${{ steps.elapsed.outputs.data }}
          color: orange
          # cacheSeconds: 310
