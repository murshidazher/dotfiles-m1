#!/usr/bin/env bash

# Set the shell.
export SHELL="/bin/zsh"

# Homebrew
export HBP=/opt/homebrew

# zsh
export ZSH="/Users/$(whoami)/.oh-my-zsh"

export DEV_DIR="$HOME/dev"

# llvm base
export LLVMBASE=$(brew --prefix llvm)

# Dotfiles
export DOTFILES_DIR="$HOME/dev/src/github/dotfiles-m1"
export DOTFILES_IDE="vs"

# Make vim the default editor.
export EDITOR='vim'

# Set NODE_ENV to development by default.
export NODE_ENV=development
# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY="$HOME/.node_history"
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768'
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy'

# export BLUEBIRD_WARNINGS=0;

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8'

# Go path.
export GOPATH="$CODE/go"

# asdf
export ASDF_PATH="$HOME/.asdf"

# miniconda path
export MINICONDA_PATH="$DEV_DIR/miniconda"

# Java path.
# source ~/.asdf/plugins/java/set-java-home.bash
export JAVA_HOME=". $HOME/.asdf/plugins/java/set-java-home.bash"
export STUDIO_JDK="$(/usr/libexec/java_home -v1.8)"

# Increase zsh history size. Allow 32³ entries; the default is 500.
export HISTFILE=~/.zsh_history
export HISTSIZE='32768'
export HISTFILESIZE="${HISTSIZE}"
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='erasedups:ignoreboth'

# Use standard ISO 8601 timestamp
# %F equivalent to %Y-%m-%d
# %T equivalent to %H:%M:%S (24-hours format)
export HISTTIMEFORMAT='%F %T '

# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

# Highlighting inside manpages and elsewhere.
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X'

# Always enable colored `grep` output.
export GREP_OPTIONS='--color=auto'

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
export GPG_TTY=$(tty)

# Brew cask
export HOMEBREW_CASK_OPTS='--appdir=/Applications'

# MySQL@5.7
export LIBRARY_PATH=$LIBRARY_PATH:/opt/homebrew/opt/openssl@1.1/lib/
export LDFLAGS="-L/opt/homebrew/opt/mysql@5.7/lib"
export LD_LIBRARY_PATH="/opt/homebrew/opt/mysql@5.7/lib"
export CPPFLAGS="-I/opt/homebrew/opt/mysql@5.7/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/mysql@5.7/lib/pkgconfig"
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"

# AWS default profile.
export AWS_PROFILE='read-only'

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

# R and R Studio
export LDFLAGS="-L/opt/homebrew/opt/openblas/lib"
export CPPFLAGS="-I/opt/homebrew/opt/openblas/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/openblas/lib/pkgconfig"

# Set CLICOLOR if you want Ansi Colors in iTerm2
export CLICOLOR=1

# Set colors to match iTerm2 Terminal Colors
export TERM=xterm-256color

# Needed by python-build on Mojave
export SDKROOT="$(xcrun --show-sdk-path)"
# Setup virtualenvwrapper
if [ -z "$PYTHON3_VERSION" ] || [ ! -z "$PYTHON_VERSION" ]; then
  PYTHON3_VERSION=$(python3 --version | cut -d' ' -f2 | cut -d'.' -f1,2)
fi
if [ -e "/usr/local/bin/virtualenvwrapper.sh" ]; then
  export WORKON_HOME="$HOME/.virtualenvs"
  export VIRTUALENVWRAPPER_PYTHON="/usr/local/bin/python${PYTHON3_VERSION}"
  source "/usr/local/bin/virtualenvwrapper.sh"
fi

# LS_COLORS
# github.com/trapd00r/LS_COLORS
# command -v gdircolors >/dev/null 2>&1 || alias gdircolors="dircolors"
# eval "$(gdircolors -b ~/.dircolors)"

# llvm
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib -Wl,-rpath,/opt/homebrew/opt/llvm/lib"
# export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

# Openjdk8
export CPPFLAGS="-I/opt/homebrew/opt/openjdk@8/include"
export CFLAGS="-O2 -g -fno-stack-check"
export KERL_CONFIGURE_OPTIONS="--disable-hipe --with-ssl=$(brew --prefix openssl)"

# mkcert
export NODE_EXTRA_CA_CERTS="$(mkcert -CAROOT)/rootCA.pem"

# php dependencies
export PKG_CONFIG_PATH="$(brew --prefix icu4c)/lib/pkgconfig:$(brew --prefix krb5)/lib/pkgconfig:$(brew --prefix libedit)/lib/pkgconfig:$(brew --prefix libxml2)/lib/pkgconfig:$(brew --prefix openssl)/lib/pkgconfig"

# Bison
export LDFLAGS="-L/opt/homebrew/opt/bison/lib"

# krb5
export LDFLAGS="-L/opt/homebrew/opt/krb5/lib"
export CPPFLAGS="-I/opt/homebrew/opt/krb5/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/krb5/lib/pkgconfig"

# libedit
export LDFLAGS="-L/opt/homebrew/opt/libedit/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libedit/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/libedit/lib/pkgconfig"

# libiconv
export LDFLAGS="-L/opt/homebrew/opt/libiconv/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libiconv/include"

# libxml2
export LDFLAGS="-L/opt/homebrew/opt/libxml2/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libxml2/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/libxml2/lib/pkgconfig"

# perl
export PERL_MM_OPT="INSTALL_BASE=$HOME/perl5" cpan local::lib
eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib=$HOME/perl5)"

# Ruby
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"

# Android
[[ -f "$HOME/.androidrc" ]] && source "$HOME/.androidrc" 2>/dev/null

# Credentials
[[ -f "$HOME/.credentials" ]] && source "$HOME/.credentials" 2>/dev/null
